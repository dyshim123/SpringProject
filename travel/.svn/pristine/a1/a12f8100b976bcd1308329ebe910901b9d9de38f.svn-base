package com.roadruwa.web;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.catalina.authenticator.SavedRequest;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.roadruwa.comm.UserException;
import com.roadruwa.comm.web.FileUploader;
import com.roadruwa.service.BoardService;
import com.roadruwa.vo.BoardDayVo;
import com.roadruwa.vo.BoardVo;
import com.roadruwa.vo.FileMng;

@Controller
public class ContentController {

	private final Log logger = LogFactory.getLog(getClass());

	@Autowired
	private BoardService boardService;

	@RequestMapping("/writeForm.do")
	public String writeForm() {
		return "writeForm";
	}
	@RequestMapping("/contentForm.do")
	public String contentForm() {
		return "contentForm";
	}

	@RequestMapping(value = "/contentForm.do", method = RequestMethod.POST)
	public String contentForm(BoardVo board, BindingResult bindingResult,BoardDayVo dayvo, BindingResult bindingResults, HttpServletRequest request, HttpServletResponse response,
			SessionStatus status) throws Exception {
		System.out.println("board ==> " + board);
		response.setContentType("text/plain");

		if (!(request instanceof MultipartHttpServletRequest)) {
			throw new UserException("dd");
		}
		
		String uploadPath = "D:\\dev_room\\upload" + File.separatorChar + "dadang";
		FileUploader fileUploader = new FileUploader();
		List<FileMng> upFiles = fileUploader.uploadFile(request, response, uploadPath);
		System.out.println("uploadfile::" + upFiles);
	        board.setbPic1(upFiles.get(0).getFileNm());
	        board.setbPic2(upFiles.get(1).getFileNm());
	        board.setbPic3(upFiles.get(2).getFileNm());
	    
	  
		String u_id = "dd";//(String) session.getAttribute("u_id");
		board.setuId(u_id);
         boardService.boardinsert(board);
		/* System.out.println(dayvo.getbTrav());
		 *  System.out.println(post[1]);
		 *  */
	   System.out.println(dayvo.getbPost());
	   String trav[] =dayvo.getbTrav().split(",");
	   String food[] = dayvo.getbFood().split(",");
	   String trans[] =dayvo.getbTrans().split(",");
	   String stay[] = dayvo.getbStay().split(",");
	   String cont[] = dayvo.getbCont().split(",");
	   String post[] = dayvo.getbPost().split(",");
	  
	   for(int i =0; i< trans.length; i++) {
		dayvo.setbNum(board.getbNum());
		dayvo.setbDay((i+1)+"");   
	    dayvo.setbTrav(trav[i]);
	    dayvo.setbFood(food[i]);
	    dayvo.setbTrans(trans[i]);
	    dayvo.setbStay(stay[i]);
	    dayvo.setbCont(cont[i]);
	    dayvo.setbPost(post[i]);
	    boardService.boardDayinsert(dayvo);
	 
	   }
		/*
		 * for(int i = 0; i< dayvo.size(); i++) { dayvo.get(i).getbTrav(); }
		 */
		
		
		/*
		 * for(int i = 0; i< dayvo.size(); i++) { System.out.println("dayvo ==> " +
		 * dayvo); boardService.boardinsertDay(dayvo.get(i));
		 * 
		 * }
		 */
		
		return "contentForm";
	}

	/* HttpServletRequest request */
	@RequestMapping(value = "/Upload.do", method = RequestMethod.POST)
	@ResponseBody
    public ResponseEntity<?> Upload(HttpServletRequest request, HttpServletResponse response) {
        try {
			String uploadPath = "D:\\dev_room\\upload" + File.separatorChar +"dadang";
			FileUploader fileUploader = new FileUploader();
			List<FileMng> upFiles = fileUploader.uploadFile(request, response, uploadPath);

            return ResponseEntity.ok().body("/image/" + upFiles.get(0).getSavedNm());
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.badRequest().build();
        }
    }
	
}
